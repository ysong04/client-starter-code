{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/adria/Documents/github/client-starter-code/src/components/views/CampusView.js\";\n/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { Link } from \"react-router-dom\";\n\n// Take in props data to construct the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampusView = props => {\n  const {\n    campus\n  } = props;\n\n  // Render a single Campus view with list of its students\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: campus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: campus.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: campus.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), campus.students.map(student => {\n          let name = student.firstname + \" \" + student.lastname;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/student/${student.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, student.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            textAlign: 'center',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/students`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-green button\",\n              children: \"Add new/existing students\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = CampusView;\nexport default CampusView;\nvar _c;\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"names":["Link","CampusView","props","campus","name","address","description","students","map","student","firstname","lastname","id","display","justifyContent","textAlign","flexDirection","alignItems"],"sources":["/mnt/c/Users/adria/Documents/github/client-starter-code/src/components/views/CampusView.js"],"sourcesContent":["/*==================================================\nCampusView.js\n\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\nIt constructs a React component to display a single campus and its students (if any).\n================================================== */\nimport { Link } from \"react-router-dom\";\n\n// Take in props data to construct the component\nconst CampusView = (props) => {\n  const { campus } = props;\n\n  // Render a single Campus view with list of its students\n  return (\n    <div>\n      <div class=\"card\" >\n        <div class=\"title\">\n          <h1>{campus.name}</h1>\n          <h2>{campus.address}</h2>\n          <h2>{campus.description}</h2>\n        </div>\n        <div class=\"content\">\n        <h3>Students</h3>\n          {campus.students.map(student => {\n            let name = student.firstname + \" \" + student.lastname;\n            return (\n              <div key={student.id}>\n                <Link to={`/student/${student.id}`}>\n                  <h2>{name}</h2>\n                </Link>\n              </div>\n            );\n          })}\n          <div style={{ display: 'flex', justifyContent: 'center', textAlign: 'center', flexDirection: 'column', alignItems: 'center' }}>\n            <Link to={`/students`}>\n              <button className=\"bg-green button\">Add new/existing students</button>\n            </Link>\n          </div>\n          \n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CampusView;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAI,QAAQ,kBAAkB;;AAEvC;AAAA;AACA,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IAAEC;EAAO,CAAC,GAAGD,KAAK;;EAExB;EACA,oBACE;IAAA,uBACE;MAAK,KAAK,EAAC,MAAM;MAAA,wBACf;QAAK,KAAK,EAAC,OAAO;QAAA,wBAChB;UAAA,UAAKC,MAAM,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eACtB;UAAA,UAAKD,MAAM,CAACE;QAAO;UAAA;UAAA;UAAA;QAAA,QAAM,eACzB;UAAA,UAAKF,MAAM,CAACG;QAAW;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACzB,eACN;QAAK,KAAK,EAAC,SAAS;QAAA,wBACpB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,EACdH,MAAM,CAACI,QAAQ,CAACC,GAAG,CAACC,OAAO,IAAI;UAC9B,IAAIL,IAAI,GAAGK,OAAO,CAACC,SAAS,GAAG,GAAG,GAAGD,OAAO,CAACE,QAAQ;UACrD,oBACE;YAAA,uBACE,QAAC,IAAI;cAAC,EAAE,EAAG,YAAWF,OAAO,CAACG,EAAG,EAAE;cAAA,uBACjC;gBAAA,UAAKR;cAAI;gBAAA;gBAAA;gBAAA;cAAA;YAAM;cAAA;cAAA;cAAA;YAAA;UACV,GAHCK,OAAO,CAACG,EAAE;YAAA;YAAA;YAAA;UAAA,QAId;QAEV,CAAC,CAAC,eACF;UAAK,KAAK,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,QAAQ;YAAEC,SAAS,EAAE,QAAQ;YAAEC,aAAa,EAAE,QAAQ;YAAEC,UAAU,EAAE;UAAS,CAAE;UAAA,uBAC5H,QAAC,IAAI;YAAC,EAAE,EAAG,WAAW;YAAA,uBACpB;cAAQ,SAAS,EAAC,iBAAiB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAmC;YAAA;YAAA;YAAA;UAAA;QACjE;UAAA;UAAA;UAAA;QAAA,QACH;MAAA;QAAA;QAAA;QAAA;MAAA,QAEF;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,KAlCIhB,UAAU;AAoChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}